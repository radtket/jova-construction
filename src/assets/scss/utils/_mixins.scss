// Usage:   @include transition(width, height 0.3s ease-in-out);
// Output:  -webkit-transition(width 0.2s, height 0.3s ease-in-out);
//          transition(width 0.2s, height 0.3s ease-in-out);
//
// Pass in any number of transitions
@mixin transition($transitions...) {
  $unfolded-transitions: ();

  @each $transition in $transitions {
    $unfolded-transitions: append($unfolded-transitions, unfold-transition($transition), comma);
  }

  // -webkit-transition: $unfolded-transitions;
  transition: $unfolded-transitions;
}

@function unfold-transition($transition) {
  // Default values
  $property: all;
  $duration: 0.45s;
  $easing: ease-in-out; // Browser default is ease, which is what we want
  $delay: null; // Browser default is 0, which is what we want
  $default-properties: ($property, $duration, $easing, $delay);

  // Grab transition properties if they exist
  $unfolded-transition: ();
  @for $i from 1 through length($default-properties) {
    $p: null;
    @if $i <= length($transition) {
      $p: nth($transition, $i);
    } @else {
      $p: nth($default-properties, $i);
    }
    $unfolded-transition: append($unfolded-transition, $p);
  }

  @return $unfolded-transition;
}

// Shorthand

// - Long - //
// transition-property: color;
// transition-duration: 0.45s;
// transition-timing-function: ease-in-out;
// transition-delay: 1.35s;

// transition(property, duration, timing-functionm delay);

// - Short - //
// transition: color 0.45s ease-in-out 1.35s;
